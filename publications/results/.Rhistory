theme(axis.line.x = element_line(size = 0.8, colour = "black"),
axis.line.y =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p_assess
# Generate charts for the assessment module
p_assess <- ggplot(data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, size = 1) +
stat_function(fun = dnorm,
xlim = c(1,5),
geom = "area",
fill = "#FA8072",
alpha = 0.3) +
stat_function(fun = dnorm,
xlim = c(-1,1),
geom = "area",
fill = "#87CEFA",
alpha = 0.3) +
stat_function(fun = dnorm,
xlim = c(-5,-1),
geom = "area",
fill = "#90EE90",
alpha = 0.3) +
scale_x_continuous(name = "Standard Deviation",
breaks = seq(-3, 3, 0.5),
limits=c(-3.5, 3.5)) +
scale_y_continuous(expand = c(0, 0.005),
limits = c(0, 0.45)) +
theme_bw() +
theme(axis.line.x = element_line(size = 0.8, colour = "black"),
axis.line.y =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p_assess
# Generate charts for the assessment module
p_assess <- ggplot(data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, size = 1) +
stat_function(fun = dnorm,
xlim = c(1,5),
geom = "area",
fill = "#FA8072",
alpha = 0.4) +
stat_function(fun = dnorm,
xlim = c(-1,1),
geom = "area",
fill = "#87CEFA",
alpha = 0.4) +
stat_function(fun = dnorm,
xlim = c(-5,-1),
geom = "area",
fill = "#90EE90",
alpha = 0.4) +
scale_x_continuous(name = "Standard Deviation",
breaks = seq(-3, 3, 0.5),
limits=c(-3.5, 3.5)) +
scale_y_continuous(expand = c(0, 0.005),
limits = c(0, 0.45)) +
theme_bw() +
theme(axis.line.x = element_line(size = 0.8, colour = "black"),
axis.line.y =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p_assess
# Generate charts for the assessment module
p_assess <- ggplot(data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, size = 1, alpha = 0.4) +
stat_function(fun = dnorm,
xlim = c(1,5),
geom = "area",
fill = "#FA8072",
alpha = 0.4) +
stat_function(fun = dnorm,
xlim = c(-1,1),
geom = "area",
fill = "#87CEFA",
alpha = 0.4) +
stat_function(fun = dnorm,
xlim = c(-5,-1),
geom = "area",
fill = "#90EE90",
alpha = 0.4) +
scale_x_continuous(name = "Standard Deviation",
breaks = seq(-3, 3, 0.5),
limits=c(-3.5, 3.5)) +
scale_y_continuous(expand = c(0, 0.005),
limits = c(0, 0.45)) +
theme_bw() +
theme(axis.line.x = element_line(size = 0.8, colour = "black"),
axis.line.y =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p_assess
# Generate charts for the assessment module
p_assess <- ggplot(data.frame(x = c(-5, 5)), aes(x)) +
stat_function(fun = dnorm, size = 1, alpha = 0.6) +
stat_function(fun = dnorm,
xlim = c(1,5),
geom = "area",
fill = "#FA8072",
alpha = 0.5) +
stat_function(fun = dnorm,
xlim = c(-1,1),
geom = "area",
fill = "#87CEFA",
alpha = 0.5) +
stat_function(fun = dnorm,
xlim = c(-5,-1),
geom = "area",
fill = "#90EE90",
alpha = 0.5) +
scale_x_continuous(name = "Standard Deviation",
breaks = seq(-3, 3, 0.5),
limits=c(-3.5, 3.5)) +
scale_y_continuous(expand = c(0, 0.005),
limits = c(0, 0.45)) +
theme_bw() +
theme(axis.line.x = element_line(size = 0.8, colour = "black"),
axis.line.y =  element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p_assess
index_s <- 1
index_e <- 52560
t = seq(index_s, index_e, 1)
t
summary(t)
index_s <- 1
index_e <- 52
t = seq(index_s, index_e, 1)
y = sin(pi/(index_e-index_s)*(t - index_s))
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y
y = sin(2*pi/(index_e-index_s)*(t - index_s))
plot(t,y,type="l", xlab="time", ylab="Sine wave")
index_s <- 1
index_e <- 8760
t = seq(index_s, index_e, 1)
y = sin(2*pi/(index_e-index_s)*(t - index_s))
plot(t,y,type="l", xlab="time", ylab="Sine wave")
y = sin(2*pi/(index_e-index_s)*(t - index_s)) + 353.4
plot(t,y,type="l", xlab="time", ylab="Sine wave")
plot(t,y,type="l", xlab="time", ylab="Sine wave")
noise <- rnorm(sum(corrupt),1000,200) # generate the noise to add
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
rep(runif(1, 5.0, 7.5), 20)
rep(runif(2, 5.0, 7.5), 20)
?runif
sample(1:100, 3, replace=FALSE)
?sample
sample(1:10, 10, replace = True)
sample(1:10, 10, replace = True)
sample(1:10, 10, replace = TRUE)
sample(1:10, 10, replace = F)
sample(1:10, 11, replace = F)
sample(-5:5, (index_e - index_s + 1), replace = TRUE)
index_s <- 1
index_e <- 8760
t = seq(index_s, index_e, 1)
base = sin(2*pi/(index_e-index_s)*(t - index_s)) + 353.4
noise <- sample(-5:5, (index_e - index_s + 1), replace = TRUE)
y <- base + noise
plot(t,y,type="l", xlab="time", ylab="Sine wave")
plot(t,base,type="l", xlab="time", ylab="Sine wave")
index_s <- 1
index_e <- 8760
t = seq(index_s, index_e, 1)
base = 1.5 * sin(2*pi/(index_e-index_s)*(t - index_s)) + 353.4
noise <- sample(-5:5, (index_e - index_s + 1), replace = TRUE)
y <- base + noise
plot(t,y,type="l", xlab="time", ylab="Sine wave")
plot(t,base,type="l", xlab="time", ylab="Sine wave")
plot(t,y,type="l", xlab="time", ylab="Sine wave")
index_s <- 1
index_e <- 52560
t = seq(index_s, index_e, 1)
base = 1.5 * sin(2*pi/(index_e-index_s)*(t - index_s)) + 353.4
noise <- sample(-5:5, (index_e - index_s + 1), replace = TRUE)
y <- base + noise
df_d <- data.frame(CO2 <- y)
View(df_d)
write.csv(df_d, "Dummy_CO2.csv", row.names = F)
index_s <- 1
index_e <- 52560
t = seq(index_s, index_e, 1)
base = 1.5 * sin(2*pi/(index_e-index_s)*(t - index_s)) + 387.6
noise <- sample(-5:5, (index_e - index_s + 1), replace = TRUE)
y <- base + noise
plot(t,y,type="l", xlab="time", ylab="Sine wave")
plot(t,base,type="l", xlab="time", ylab="Sine wave")
df_d <- data.frame(CO2 <- y)
View(df_d)
write.csv(df_d, "Dummy_CO2.csv", row.names = F)
plot(t,y,type="l", xlab="time", ylab="Sine wave")
R
3+4
setwd("C:/Users/Han/Dropbox (Energy Technologies)/Projects/Sensor Data Integration/sub-task-2/Experiments/All/plots")
library(readr)
library(plotly)
library(dplyr)
library(reshape2)
df <- read.csv('Case 1_infiltration.csv')
df_ach <- df %>% select(which(grepl('Zone_3', colnames(df)) & grepl('Chicago', colnames(df))))
df_ach <- select_if(df_ach, is.numeric)
if (nrow(df_ach) == 8760){
v_time <- seq(ISOdatetime(1995,1,1,0,00,0), ISOdatetime(1995,12,31,23,50,0), by=(60*60))
df_ach$Time <- v_time
} else{
v_time <- seq(ISOdatetime(1995,1,1,0,00,0), ISOdatetime(1995,12,31,23,50,0), by=(60*10))
df_ach$Time <- v_time
}
colnames(df_ach)
p <- subplot(p1, p2, nrows = 2, margin = 0.04, heights = c(0.6, 0.3, 0.1))
p1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p <- subplot(p1, p2, nrows = 2, margin = 0.04, heights = c(0.6, 0.3, 0.1))
p <- subplot(p1, p2, nrows = 2, margin = 0.04, heights = c(0.5, 0.5))
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
colnames(df_ach)
p1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p <- subplot(p1, p2, p3, nrows = 2, margin = 0.04, heights = c(0.5, 0.5, 0.5))
p1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p <- subplot(p1, p2, p3, nrows = 3, margin = 0.04, heights = c(0.5, 0.5, 0.5))
p <- subplot(p1, p2, p3, nrows = 3, margin = 0.04, heights = c(0.33, 0.33, 0.33))
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
p1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p <- subplot(p1, p2, p3, nrows = 3, margin = 0.04, heights = c(0.33, 0.33, 0.33))
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
write.csv(df_ach, 'zone_3_ach.csv', row.names = F)
setwd("~/GitHub/SDI/publications/results")
library(readr)
library(plotly)
library(dplyr)
library(reshape2)
df <- read.csv('Case 1_infiltration.csv')
df_ach <- df %>% select(which(grepl('Zone_3', colnames(df)) & grepl('Chicago', colnames(df))))
df_ach <- select_if(df_ach, is.numeric)
if (nrow(df_ach) == 8760){
v_time <- seq(ISOdatetime(1995,1,1,0,00,0), ISOdatetime(1995,12,31,23,50,0), by=(60*60))
df_ach$Time <- v_time
} else{
v_time <- seq(ISOdatetime(1995,1,1,0,00,0), ISOdatetime(1995,12,31,23,50,0), by=(60*10))
df_ach$Time <- v_time
}
write.csv(df_ach, 'zone_3_ach.csv', row.names = F)
colnames(df_ach)
df_ach_week <- df_ach %>% filter(Time >= ISOdatetime(1995,7,20,0,00,0) & Time < ISOdatetime(1995,7,27,0,00,0))
View(df_ach_week)
# Annual
p1_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
# Week
p1_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p <- subplot(p1_1, p2_1, p3_1, p1_2, p2_2, p3_2, nrows = 3, ncols = 2, margin = 0.04, heights = c(0.33, 0.33, 0.33))
# Annual
p1_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
# Week
p1_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
s1 <- subplot(p1_1, p2_1, p3_1, nrows = 3, margin = 0.04, heights = c(0.33, 0.33, 0.33))
s2 <- subplot(p1_2, p2_2, p3_2, nrows = 3, margin = 0.04, heights = c(0.33, 0.33, 0.33))
p <- subplot(s1, s2, plot_ly())
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
# Annual
p1_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
# Week
p1_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
s1 <- subplot(p1_1, p2_1, p3_1, nrows = 3, margin = 0.04, heights = c(0.33, 0.33, 0.33))
s2 <- subplot(p1_2, p2_2, p3_2, nrows = 3, margin = 0.04, heights = c(0.33, 0.33, 0.33))
p <- subplot(s1, s2)
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
# Annual
p1_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
# Week
p1_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
s1 <- subplot(p1_1, p2_1, p3_1, nrows = 3, shareX = TRUE, margin = 0.04, heights = c(0.33, 0.33, 0.33))
s2 <- subplot(p1_2, p2_2, p3_2, nrows = 3, shareX = TRUE, margin = 0.04, heights = c(0.33, 0.33, 0.33))
p <- subplot(s1, s2, shareY = TRUE)
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
# Annual
p1_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_1 <- plot_ly(df_ach, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
# Week
p1_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Temperature.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Temperature.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with temperature',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p2_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_Humidity.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_Humidity.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
p3_2 <- plot_ly(df_ach_week, x = ~Time, y = ~Solve_with_CO2.Chicago.Zone_3_Ground_Truth,
name = 'Ground truth', type = 'scatter', mode = 'lines',
line = list(color='rgb(205,12,24)', width=2)) %>%
add_trace(y = ~Solve_with_CO2.Chicago.Zone_3_Hybrid_Solution, name = 'Solved with humidity ratio',
line = list(color = 'rgb(22, 96, 167)', width = 2, dash = 'dash'))
s1 <- subplot(p1_1, p2_1, p3_1, nrows = 3, shareX = TRUE, margin = 0.04, heights = c(0.33, 0.33, 0.33))
s2 <- subplot(p1_2, p2_2, p3_2, nrows = 3, shareX = TRUE, margin = 0.04, heights = c(0.33, 0.33, 0.33))
p <- subplot(s1, s2)
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
source('~/GitHub/SDI/publications/results/time_series.r')
p <- subplot(s1, s2) %>% layout(showlegend = FALSE)
htmlwidgets::saveWidget(as_widget(p), 'paper_plot.html')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
source('~/GitHub/SDI/publications/results/time_series.r')
